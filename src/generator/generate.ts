import prettier from 'prettier'
import { EntityMetadata } from 'typeorm'

import {
  entityToWhereInput,
  entityToWhereUniqueInput,
  entityToCreateInput,
  entityToUpdateInput,
} from './entity-to-inputs'
import { entityToOrderByEnum } from './entity-to-enum'
import {
  entityToFindArgs,
  entityToCreateManyArgs,
  entityToUpdateArgs,
  entityToFindOneArgs,
  entityToCreateArgs,
  entityToDeleteManyArgs,
  entityToDeleteArgs,
  entityToUpdateManyArgs,
} from './entity-to-args'
import { WarthogModuleOptions } from '../options'

const HEADER = `
// This file has been auto-generated by NestJS Warthog.
// Do not update directly as it will be re-written.

import { ArgsType, Field, Float, InputType, Int } from 'type-graphql'
import { registerEnumType } from 'type-graphql'
import { PaginationArgs } from 'nestjs-warthog'
`

export const formatCode = (code: string) => {
  // TODO: grab our prettier options (single quote, etc...)
  try {
    return prettier.format(code, {
      parser: 'typescript',
      printWidth: 100,
      endOfLine: 'lf',
      singleQuote: true,
      semi: false,
      tabWidth: 2,
      useTabs: false,
    })
  } catch (err) {
    console.log(`There was a problem with formatting:`)
    console.log(JSON.stringify(err))

    return code
  }
}

export const generate = async (entities: EntityMetadata[], opts: WarthogModuleOptions) => {
  let result = HEADER.trim() + '\n\n'

  for (const entity of entities) {
    result += [
      entityToOrderByEnum(entity),
      entityToWhereInput(entity),
      entityToWhereUniqueInput(entity),
      entityToCreateInput(entity),
      entityToUpdateInput(entity),
      entityToFindOneArgs(entity),
      entityToFindArgs(entity),
      entityToCreateArgs(entity),
      entityToCreateManyArgs(entity),
      entityToUpdateArgs(entity),
      entityToUpdateManyArgs(entity),
      entityToDeleteArgs(entity),
      entityToDeleteManyArgs(entity),
    ].join('\n\n')
  }

  if (prettier && !opts.shouldSkipPrettier) {
    return formatCode(result)
  }

  return result
}
